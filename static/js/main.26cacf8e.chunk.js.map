{"version":3,"sources":["components/Header.js","components/Book.js","components/BookShelves.js","BooksAPI.js","components/SearchPage.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Book","props","books","shelf","filtered","filter","b","map","book","i","key","style","width","height","backgroundImage","concat","imageLinks","thumbnail","onChange","event","onValueChange","target","value","disabled","title","authors","BookShelves","_this","this","Header_Header","type","components_Book","react_router_dom","to","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","fetch","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","SearchPage","state","searchResult","items","searchBook","length","BooksAPI","setState","placeholder","App","newShelf","filteredBooks","push","_this2","_this3","react_router","exact","path","render","BookShelves_BookShelves","SearchPage_SearchPage","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.26cacf8e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list-books-title\">\r\n        <h1>MyReads</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Book = props => {\r\n  const { books, shelf } = props;\r\n\r\n  //FILTERING OF BOOKS ACCORDING TO THEIR SHELF TYPE\r\n  const filtered = books.filter(b => b.shelf === shelf);\r\n  return (\r\n    <div className=\"bookshelf-books\">\r\n      <ol className=\"books-grid\">\r\n        {/*MAPPING THE FILTERED ARRAY*/}\r\n        {filtered.map((book, i) => (\r\n          <li key={i}>\r\n            <div className=\"book\">\r\n              <div className=\"book-top\">\r\n                <div\r\n                  className=\"book-cover\"\r\n                  style={{\r\n                    width: 128,\r\n                    height: 193,\r\n                    backgroundImage: `url(${\r\n                      book.imageLinks\r\n                        ? book.imageLinks.thumbnail\r\n                        : \"No thumbnail\"\r\n                    })`\r\n                  }}\r\n                />\r\n                <div className=\"book-shelf-changer\">\r\n                  <select\r\n                    onChange={event =>\r\n                      props.onValueChange(book, event.target.value)\r\n                    }\r\n                    value={book.shelf ? book.shelf : \"none\"} //if shelf type is not defined then it is none\r\n                  >\r\n                    <option value=\"move\" disabled>\r\n                      Move to...\r\n                    </option>\r\n                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                    <option value=\"wantToRead\">Want to Read</option>\r\n                    <option value=\"read\">Read</option>\r\n                    <option value=\"none\">None</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"book-title\">{book.title}</div>\r\n              <div className=\"book-authors\">{book.authors}</div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Book;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Book from \"./Book\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class BookShelves extends Component {\r\n  render() {\r\n    let shelves = [\r\n      {\r\n        title: \"Currently Reading\",\r\n        type: \"currentlyReading\"\r\n      },\r\n      {\r\n        title: \"Want To Read\",\r\n        type: \"wantToRead\"\r\n      },\r\n      { title: \"Read\", type: \"read\" }\r\n    ];\r\n\r\n    const { books } = this.props;\r\n\r\n    return (\r\n      <div className=\"list-books\">\r\n        <Header />\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            {/*MAPPING THROUGH SHELVES ARRAY*/}\r\n            {shelves.map((shelf, i) => {\r\n              return (\r\n                <div key={i} className=\"bookshelf\">\r\n                  <h2 className=\"bookshelf-title\">{shelf.title}</h2>\r\n                  <Book\r\n                    shelf={shelf.type}\r\n                    books={books}\r\n                    onValueChange={this.props.onValueChange}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"open-search\">\r\n          <Link to=\"/search\">\r\n            <button>Add a book</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as BooksAPI from \"../BooksAPI\";\r\nimport Book from \"../components/Book\";\r\n\r\nexport default class SearchPage extends Component {\r\n  state = {\r\n    searchResult: [],\r\n    query: \"\",\r\n    items: 0 // We created a state which will indicate if search returned zero items. By default its false\r\n  };\r\n\r\n  searchBook = event => {\r\n    const query = event.target.value;\r\n    if (query.length > 0) {\r\n      // if searchquery is true\r\n      BooksAPI.search(event.target.value).then(books => {\r\n        if (books.length > 0) {\r\n          // and books are found\r\n          this.setState({ searchResult: books, items: 2 });\r\n        } else {\r\n          //books are not found\r\n          this.setState({ searchResult: [], items: 1 });\r\n        }\r\n      });\r\n    } else {\r\n      // if searchquery is false\r\n      this.setState({ searchResult: [], query: \"\", items: 0 });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\">\r\n            <button className=\"close-search\">Close</button>\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author\"\r\n              onChange={this.searchBook}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          {this.state.items === 0 && <div>Please search</div> //check if zero books are returned coz we cant map on empty array\r\n          }\r\n          {this.state.items === 1 && <div>Zero search result</div> //check if zero books are returned coz we cant map on empty array\r\n          }\r\n          {this.state.items === 2 && (\r\n            <Book\r\n              books={this.state.searchResult}\r\n              onValueChange={this.props.onValueChange}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\nimport React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport BookShelves from \"./components/BookShelves\";\r\nimport SearchPage from \"./components/SearchPage\";\r\nimport { Route } from \"react-router-dom\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\n\r\n//STATE COMPONENT\r\nexport default class App extends Component {\r\n  state = {\r\n    books: []\r\n  };\r\n\r\n  //MOUNTING OF DATA  FROM BOOKSAPI\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then(books => {\r\n      this.setState({\r\n        books\r\n      });\r\n    });\r\n  }\r\n\r\n  onValueChange = (book, newShelf) => {\r\n    BooksAPI.update(book, newShelf).then(() => {\r\n      book.shelf = newShelf;\r\n      const filteredBooks = this.state.books.filter(a => book.id !== a.id);\r\n      filteredBooks.push(book);\r\n      this.setState({\r\n        books: filteredBooks\r\n      });\r\n    });\r\n  };\r\n\r\n  //RENDERING THE COMPONENTS\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => {\r\n            return (\r\n              <BookShelves\r\n                books={this.state.books}\r\n                onValueChange={this.onValueChange}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/search\"\r\n          render={() => {\r\n            return <SearchPage onValueChange={this.onValueChange} />;\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}